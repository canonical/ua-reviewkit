# See README.md and 'ua-bundle-check.py --schema' for usage and schema details
checks:
  mysql-percona:
    charm: percona-cluster
    assertions:
      ha:
        assert_ha:
          scope: application
      innodb-buffer-pool-size:
        gte:
          scope: config
          source: local
          value: 6G
          description: >-
            mysql must be allowed to cache a useful amount of data corresponding
            to the amount of memory available to the unit.
      max-connections:
        gte:
          scope: config
          source: local
          value: 2000
          description: >-
            Openstack services will pool open connections so this value must
            be high enough to accommodate your deployment.
  mysql-innodb-cluster:
    charm: mysql-innodb-cluster
    assertions:
      ha:
        assert_ha:
          scope: application
      innodb-buffer-pool-size:
        gte:
          scope: config
          source: local
          value: 6G
          description: >-
            mysql must be allowed to cache a useful amount of data corresponding
            to the amount of memory available to the unit.
      max-connections:
        gte:
          scope: config
          source: local
          value: 2000
          description: >-
            Openstack services will pool open connections so this value must
            be high enough to accommodate your deployment.
  rabbitmq-server:
    charm: rabbitmq-server
    assertions:
      ha:
        assert_ha:
          scope: application
      cluster-partition-handling:
        eq:
          scope: config
          source: local
          value: "pause_minority"
          description: >-
            We recommend using "pause-minority".
  etcd:
    charm: etcd
    assertions:
      ha:
        assert_ha:
          scope: application
  barbican:
    charm: barbican
    assertions:
      ha:
        assert_ha:
          scope: application
  ceph-mon:
    charm: ceph-mon
    assertions:
      ha:
        assert_ha:
          scope: application
  ceph-osd:
    charm: ceph-osd
    assertions:
      bluestore-block-wal-size:
        allow_default:
          scope: config
        gte:
          scope: config
          source: local
          value: 1G
  ceph-proxy:
    charm: ceph-proxy
    assertions:
  ceph-radosgw:
    charm: ceph-radosgw
    assertions:
      ceph-osd-replication-count:
        allow_default:
          scope: config
        eq:
          scope: config
          source: local
          value: 3
  cinder:
    charm: cinder
    assertions:
      ha:
        assert_ha:
          scope: application
  cinder-ceph:
    charm: cinder-ceph
    assertions:
      ceph-osd-replication-count:
        allow_default:
          scope: config
        eq:
          scope: config
          source: local
          value: 3
  designate:
    charm: designate
    assertions:
      ha:
        assert_ha:
          scope: application
  glance:
    charm: glance
    assertions:
      ha:
        assert_ha:
          scope: application
      ceph-osd-replication-count:
        allow_default:
          scope: config
        eq:
          scope: config
          source: local
          value: 3
  gnocchi:
    charm: gnocchi
    assertions:
      ha:
        assert_ha:
          scope: application
  heat:
    charm: heat
    assertions:
      ha:
        assert_ha:
          scope: application
  keystone:
    charm: keystone
    assertions:
      ha:
        assert_ha:
          scope: application
  manila:
    charm: manila
    assertions:
      ha:
        assert_ha:
          scope: application
  neutron-api:
    charm: neutron-api
    assertions:
      ha:
        assert_ha:
          scope: application
      global-physnet-mtu:
        eq:
          scope: config
          source: local
          value: 9000
          warn-on-fail: true
          description: >-
            While not a hard requirment, we currently recommend using Jumbo
            frames for this setting so as to allow enough flexibility for
            all neutron networks.
  neutron-gateway:
    charm: neutron-gateway
    assertions:
      ha:
        assert_ha:
          scope: application
          warn-on-fail: true
  nova-cloud-controller:
    charm: nova-cloud-controller
    assertions:
      ha:
        assert_ha:
          scope: application
  nova-compute:
    charm: nova-compute
    assertions:
      vcpu-pin-set:
        allow_default:
          scope: config
        skip_if_charm_exists:
          value: sysconfig
        eq:
          scope: config
          source: master
          value: '.*kernel_opts:.+isolcpus=([0-9\-,]+).*'
          warn-on-fail: true
      cpu-model:
        isset:
          scope: config
          source: bundle
          warn-on-fail: true
          description: >-
            This should be set to the highest available cpu model across all
            nodes to avoid problems with cpu feature incompatibility when
            performing live-migrations.
      ephemeral-device:
        allow_default:
          scope: config
          source: bundle
        exclusive_backing_dev:
          scope: config
          source: bucketsconfig
          description: >-
            Ensure that nova instances path (if using bcache) is not backed by
            the same physical disk used for the rootfs.
      ceph-osd-replication-count:
        allow_default:
          scope: config
        eq:
          scope: config
          source: local
          value: 3
  octavia:
    charm: octavia
    assertions:
      ha:
        assert_ha:
          scope: application
  placement:
    charm: placement
    assertions:
      ha:
        assert_ha:
          scope: application    
  swift-proxy:
    charm: swift-proxy
    assertions:
      ha:
        assert_ha:
          scope: application
  sysconfig:
    charm: sysconfig
    assertions:
      governor:
        eq:
          scope: config
          source: local
          value: "performance"
  vault:
    charm: vault
    assertions:
      ha:
        assert_ha:
          scope: application
      channel:
        neq:
          scope: config
          source: local
          value: stable
          description: >-
            The vault snap channel must not be set to "stable" as this
            will result in whatever version of vault is available in
            that channel being installed which will change over time
            and may not be supported by the charm. Typically this
            should be matched to the charm channel itself e.g. 1.7/stable.
  hacluster:
    charm: hacluster
    assertions:
      cluster_count:
        allow_default:
          scope: config
        gte:
          scope: config
          source: local
          value: 3
  ovn-chassis:
    charm: ovn-chassis
  ovn-central:
    charm: ovn-central
  neutron-api-plugin-ovn:
    charm: neutron-api-plugin-ovn
    assertions:
      dns-servers:
        isset:
          scope: config
          source: bundle

